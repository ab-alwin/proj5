trigger:
  branches:
    include:
      - main

variables:
  buildConfiguration: 'Release'
  dockerRegistryServiceConnection: 'your-docker-service-connection'
  imageRepository: 'java-ci-cd-app'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  sonarProjectKey: 'your-sonarqube-project-key'
  sonarServiceConnection: 'your-sonarqube-service-connection'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: MavenBuild
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'

- stage: SonarQube
  displayName: 'SonarQube Analysis'
  dependsOn: Build
  jobs:
  - job: SonarScan
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: '$(sonarServiceConnection)'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: '$(sonarProjectKey)'
        cliSources: '.'
    - script: mvn verify sonar:sonar
      displayName: 'Run Sonar Scanner'
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'

- stage: Docker
  displayName: 'Build and Push Docker Image'
  dependsOn: SonarQube
  jobs:
  - job: DockerBuildPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest
